#include <vector>
#include<bits/stdc++.h>
using namespace std;

map<int,vector<char>>mapping{{0,{'0'}},  {1,{'1'}},  {2,{'a','b','c'}},
														 {3,{'d','e','f'}},  {4,{'g','h','i'}},
														 {5,{'j','k','l'}},  {6,{'m','n','o'}},
														 {7,{'p','q','r','s'}}, {8,{'t','u','v'}},
														 {9,{'w','x','y','z'}}
														};

void phonenumberhelper(int idx,string phonenumber,vector<char> &current,vector<string>&mnemonic){
	if(idx ==phonenumber.length()){
		string temp=accumulate(current.begin(),current.end(),string{});
		mnemonic.push_back(temp);
	}
	else{
		int val=phonenumber[idx]-'0';
		vector<char> letters=mapping[val];
		 for(auto letter : letters){
			 current[idx]=letter;
			 phonenumberhelper(idx+1,phonenumber,
												 current,mnemonic);
		 }
	}
}

vector<string> phoneNumberMnemonics(string phonenumber) {
  // Write your code here.
	vector<string>mnemonic;
	vector<char>current(phonenumber.size(),'0');
	cout<<(int)'4'<<endl;
	phonenumberhelper(0,phonenumber,
												 current,mnemonic);
	
  return mnemonic;
}
