def longestpalindrome(string,i,j):
	while i>=0 and j<len(string):
		if string[i]!=string[j]:
			break
		i-=1
		j+=1
	return [i+1,j]

def longestPalindromicSubstring(string):
    # Write your code here.
	current=[0,1]
	
	for i in range(1,len(string)):
		odd=longestpalindrome(string,i-1,i+1)
		even= longestpalindrome(string,i-1,i)
		longest=max(odd,even,key=lambda x:x[1]-x[0])
		current=max(longest,current,key=lambda x:x[1]-x[0])
		
    return string[current[0] : current[1]]
