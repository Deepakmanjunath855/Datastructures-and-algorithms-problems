#include<bits/stdc++.h>
using namespace std;

// Feel free to add new properties and methods to the class.
class MinMaxStack {
public:
	vector<unordered_map<string,int>>minmaxstack={};
	vector<int> stack={};
	
	
  int peek() {
		return stack[stack.size()-1];
  }

  int pop() {
    minmaxstack.pop_back();
		int result=stack[stack.size()-1];
		stack.pop_back();
		return result;
  }

  void push(int number) {
    unordered_map<string,int>newminmax={{"min",number},{"max",number}};
		if(minmaxstack.size()){
			unordered_map<string,int>lastminmax=minmaxstack[minmaxstack.size()-1];
			newminmax["min"]=min(lastminmax["min"],number);
			newminmax["max"]=max(lastminmax["max"],number);
		}
		minmaxstack.push_back(newminmax);
		stack.push_back(number);
  }

  int getMin() {
    return minmaxstack[minmaxstack.size()-1]["min"];
  }

  int getMax() {
    return minmaxstack[minmaxstack.size()-1]["max"];
  }
};
